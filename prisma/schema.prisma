// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../src/generated/prisma"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum UserType {
  ADMIN
  USER
}

model User {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  email       String        @unique
  phone       String
  name        String
  password    String
  privilegeId String        @db.ObjectId
  privilege   UserPrivilege @relation(fields: [privilegeId], references: [id])
}

model UserPrivilege {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  User        User[]
}

model Product {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  mrp           Int
  productCode   String      @unique
  description   String
  expiryDate    DateTime
  validity      String
  quantity      Int
  tags          String[]
  imageUrl      String
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  categoryId    String      @db.ObjectId
  category      Category    @relation(fields: [categoryId], references: [id])
  groupId       String      @db.ObjectId
  group         Group       @relation(fields: [groupId], references: [id])
  subCategoryId String      @db.ObjectId
  subCategory   SubCategory @relation(fields: [subCategoryId], references: [id])
  grammage      String
  OrderItem     OrderItem[]
}

model Group {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Product     Product[]
}

model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Product     Product[]
}

model SubCategory {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String    @unique
  description String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Product     Product[]
}

model Order {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  orderCode  String      @unique
  totalPrice Int
  orderDate  DateTime    @default(now())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  OrderItem  OrderItem[]
}

model OrderItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orderId   String   @db.ObjectId
  order     Order    @relation(fields: [orderId], references: [id])
  productId String   @db.ObjectId
  product   Product  @relation(fields: [productId], references: [id])
}

model Customer {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String
  phone     String
  address   String
  pan       String
  gstNumber String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Employee {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  employeeId String   @unique @default(uuid())
  name       String
  email      String?
  phone      String?
  address    String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Vehicle {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  vehicleNumber String
  vehicleType   String
  capacity      Int
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
